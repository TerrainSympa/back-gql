import {faker} from "@faker-js/faker";
import {
    MultiPolygon as MultiPolygonType,
    Point as PointType,
    MultiLineString as MultiLineStringType
} from "geojson";

const geoJsons: MultiPolygonType[] = [
    {"type":"MultiPolygon","coordinates":[[[[5.050491581,46.193507085],[5.050688286,46.193491466],[5.051100434,46.192608915],[5.050898712,46.192642912],[5.050491581,46.193507085]]]]},
    {"type":"MultiPolygon","coordinates":[[[[5.646087009,45.824690563],[5.64611369,45.824736339],[5.646147238,45.824788261],[5.646841011,45.824665681],[5.646936815,45.824637216],[5.646900794,45.824490747],[5.646331647,45.824632211],[5.646087009,45.824690563]]]]},
    {"type":"MultiPolygon","coordinates":[[[[5.794344444,45.870946292],[5.794243823,45.870963918],[5.794147581,45.870859253],[5.794103536,45.870880976],[5.794329365,45.871239238],[5.794529857,45.871560732],[5.794571626,45.871557717],[5.794631851,45.871552353],[5.794684402,45.871545737],[5.794504163,45.871221759],[5.794344444,45.870946292]]]]},
    {"type":"MultiPolygon","coordinates":[[[[5.301679112,46.385699074],[5.302723774,46.387242765],[5.302903196,46.387126176],[5.301815419,46.385643714],[5.301679112,46.385699074]]]]},
    {"type":"MultiPolygon","coordinates":[[[[5.038309052,46.256067383],[5.036680603,46.256307499],[5.036694084,46.256868983],[5.036710385,46.257565624],[5.03671418,46.257618792],[5.037366991,46.257531442],[5.038143951,46.257426733],[5.038915648,46.257323733],[5.038309052,46.256067383]]]]},
    {"type":"MultiPolygon","coordinates":[[[[5.653768931,45.787489461],[5.653731545,45.7875262],[5.65370948,45.787549424],[5.65370332,45.787555246],[5.653698764,45.787559587],[5.653668088,45.787593916],[5.65364175,45.787624719],[5.653620796,45.787649629],[5.653606271,45.787668982],[5.653604875,45.787672078],[5.653606749,45.787673566],[5.653708422,45.787709647],[5.653721545,45.7876933],[5.653737914,45.787674805],[5.653758859,45.787649715],[5.653773745,45.787632517],[5.653804054,45.787603963],[5.653828671,45.787580228],[5.653851232,45.787561948],[5.653866858,45.78755212],[5.653877884,45.787545734],[5.653907411,45.787533056],[5.653999675,45.787485926],[5.654060086,45.787456664],[5.654080827,45.787446085],[5.654097856,45.787438656],[5.654135631,45.787420739],[5.654201355,45.787392163],[5.65422789,45.787381537],[5.654256954,45.787369951],[5.65428528,45.787359104],[5.654302661,45.787350946],[5.654322336,45.787344987],[5.654359161,45.787331417],[5.654376898,45.787325323],[5.654391544,45.787321915],[5.654436817,45.787309948],[5.654509839,45.787291201],[5.654539093,45.787283575],[5.654547012,45.787279515],[5.65452129,45.787274894],[5.654485787,45.787270413],[5.654456168,45.787267777],[5.65444218,45.787266123],[5.654420542,45.787266092],[5.654404848,45.787266461],[5.654373847,45.787269894],[5.654352743,45.787272913],[5.65432708,45.787277571],[5.654295691,45.787286328],[5.654266507,45.787298097],[5.654248822,45.787305271],[5.654235146,45.787291357],[5.654148165,45.787327821],[5.654032421,45.787376765],[5.653945825,45.78741322],[5.653860422,45.787450368],[5.653801223,45.787475367],[5.653768931,45.787489461]]]]},
    {"type":"MultiPolygon","coordinates":[[[[5.472810874,45.892559105],[5.472908119,45.89260716],[5.472934112,45.89257686],[5.472973536,45.892592845],[5.472946568,45.89262731],[5.473007174,45.892666797],[5.473088434,45.892729526],[5.473130669,45.892767883],[5.4732267,45.892863623],[5.473266617,45.892720943],[5.473277328,45.892698005],[5.473356987,45.892601394],[5.47341238,45.892536215],[5.473115984,45.892463598],[5.473077825,45.892449928],[5.47298815,45.892418195],[5.472946142,45.892456773],[5.472872542,45.892524511],[5.472843918,45.892550814],[5.472827226,45.892543972],[5.472810874,45.892559105]]]]},
    {"type":"MultiPolygon","coordinates":[[[[5.767442853,45.784454412],[5.767486432,45.784550475],[5.767951139,45.784376706],[5.767923449,45.784286741],[5.767658278,45.784379206],[5.767442853,45.784454412]]]]},
    {"type":"MultiPolygon","coordinates":[[[[4.903383523,45.903780266],[4.903183846,45.904536477],[4.90367588,45.904627999],[4.904086986,45.903486127],[4.904573282,45.902123653],[4.904444619,45.902040609],[4.903914666,45.901836775],[4.903883265,45.901824152],[4.903383523,45.903780266]]]]},
    {"type":"MultiPolygon","coordinates":[[[[5.370067497,46.093534509],[5.369125596,46.094489129],[5.369232132,46.094521318],[5.36938034,46.094396873],[5.369807558,46.094040385],[5.370211661,46.093700505],[5.370205915,46.093687382],[5.370177285,46.093636088],[5.370154025,46.093607205],[5.370113045,46.093569773],[5.370067497,46.093534509]]]]},
]

const centers: PointType[] = geoJsons.map((gj) => {
    const lat = gj.coordinates[0][0].reduce(
        (previousValue, currentValue) => previousValue + currentValue[0], 0
    ) / gj.coordinates[0][0].length
    const lng = gj.coordinates[0][0].reduce(
        (previousValue, currentValue) => previousValue + currentValue[1], 0
    ) / gj.coordinates[0][0].length
    return {type: 'Point', coordinates: [lat, lng]};
});

const lineString: MultiLineStringType[] = [{"type":"MultiLineString","coordinates":[[[5.050491581,46.193507085],[5.050491581-0.0001,46.193507085],[5.050491581-0.0001,46.193507085+0.0001]]]}]

function squareFromCenter(center: number[]) {
    const geomType = Math.random();
    if(geomType < 0.25) {
        return {__typename: 'BuildingInParcelle', geom:{"type":"MultiPolygon","coordinates":[[[center,[center[0]-0.0001,center[1]],[center[0]-0.0001,center[1]-0.0001],[center[0],center[1]-0.0001],center]]]}};
    } else if(geomType < 0.5) {
        return {__typename: 'ForestInParcelle', geom:{"type":"MultiPolygon","coordinates":[[[center,[center[0]+0.0001,center[1]],[center[0]+0.0001,center[1]+0.0001],[center[0],center[1]+0.0001],center]]]}};
    } else if(geomType < 0.75) {
        return {__typename: 'RiverInParcelle', geom:{"type":"LineString","coordinates":[center,[center[0]-0.0001,center[1]],[center[0]-0.0001,center[1]+0.0001]]}};
    } else {
        return {__typename: 'PluInParcelle', geom:{"type":"MultiPolygon","coordinates":[[[center,[center[0]+0.0001,center[1]],[center[0]+0.0001,center[1]-0.0001],[center[0],center[1]-0.0001],center]]]}};
    }
}

const parcellesMocks = geoJsons.map((geom, i) => {
    return {geom: geom, center: centers[i], inside: [...Array(Math.floor(Math.random() * 3))].map(() => squareFromCenter(centers[i].coordinates))}
});

export default {
    ID: () => faker.number.int(2),
    Int: () => faker.number.int(2),
    Float: () => faker.number.float({ min: 10, max: 100 }),
    String: () => faker.color.human() + ' ' + faker.animal.type(),
    GeoJSONMultiPolygonScalar: () => geoJsons.randomElements(),
    GeoJSONPointScalar: () => centers.randomElements(),
    GeoJSONMultiLineStringScalar: () => lineString.randomElements(),
    WebsiteUrl: () => faker.internet.url(),
    PhoneNumber: () => faker.phone.number({style: 'national'}),
    Email: () => faker.internet.email(),
    DateTime: () => faker.date.recent(),
    LatLng: () => ({lat: faker.number.float({ min: 45.5, max: 46.5 }), lng: faker.number.float({ min: 4.7, max: 6.1 })}),
    Parcelle: () => parcellesMocks.randomElements(),
    Query: () => ({
        search: parcellesMocks.randomElements(5)
    })
}
